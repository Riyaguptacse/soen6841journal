Student Name: Riya Gupta
Course: SOEN 6841, Software Project Management
Journal URL: https://github.com/Riyaguptacse/soen6841journal/blob/main/finaljournal
Dates Range of activities: 11 November 2024 - 21 November 2024
Date of the journal: 22/11/2024
Key Concepts learned: 
I now have a much better understanding of project management concepts and procedures thanks to Software Project Management. On subjects including project start, planning, control, monitoring, and closing, the course has taken a methodical approach. A thorough examination of the requirements and change control system has resulted in a profound comprehension of its significance in project management within the software industry, which has contributed to its success. Chapters like risk management explain the dangers that come with projects, and as I researched software project risks, I learnt about a variety of factors and tactics that focused on addressing the many types of risks, such as risk minimisation, risk transfer, and avoidance.I now understand a crucial component of project monitoring—maintaining versions of our software development to prevent problems whenever there is a change—thanks to configuration management in projects. In order to ensure a smooth project flow, requirement management provided crucial insight into how to collect appropriate needs and convey them to the clients. Going forward, project closure taught the value of documentation for future project uses and for monitoring existing projects, as well as for marking all milestones and quality gates and guaranteeing timely outputs. The need to modify project management techniques, such as choosing between the waterfall and iterative models, to fit the unique requirements and dynamics of a project, was one of the most revolutionary realisations. 
Application in Real Projects:
There are numerous work situations in which the knowledge acquired in this course can be immediately utilised. The concepts of risk management and earned value analysis (EVA), for example, will aid in better project budget and schedule management. Projects employing quickly changing technology benefit greatly from the ideas of quality assurance procedures and iterative development models like SCRUM. Configuration management abilities will also guarantee improved control over software versions and modifications, which will lessen turmoil in group settings.In the workplace, where we will be working on real-world projects, the knowledge we have learnt in this course is extremely important. To estimate the qualities of a software project, for instance, the Delphi approach and the COCOMO model are used. While Delphi relies on expert consensus for effort assessment, the COCOMO model, with its empirically grounded foundation, allows for more accurate effort estimation and is especially helpful in collaborative projects. Another significant example is the way that complicated projects are properly broken down into tasks when using WBS.The industry's resource optimisation then benefits from categorising the project as either top-down or bottom-up. Effective management of project budgets and schedules is made possible by the concepts of risk management and Earned Value Analysis (EVA). The project's requirement management phase is when we collect all of the requirements after they have been analysed, classified, modified, verified, and validated. Activities including product implementation, user training, and maintenance types like preventive, corrective, and adaptive maintenance were described under release management. These ideas are essential for creating dependable software and preserving project lifecycle continuity in professional settings.
All of these are important in the workplace, and this course has given me very informed views into the software project industry.
Peer Interactions: 
Working together with my classmates was one of the main ways I learnt, and it really widened my viewpoint. We were able to address every issue using real-world examples and our own experiences because we were working on a group project with team members who had prior work experience in the software sector. For instance, my peers and I discussed the waterfall model's applicability vs iterative models like SCRUM for various project types while studying software lifecycle management. One of us gave a real-world example from their internship where their team was able to swiftly adjust to shifting client needs thanks to the iterative process. Another mentioned that projects with clearly specified requirements benefit greatly from the waterfall paradigm.We talked about other software project management technologies, such as Github, and even used them to broaden our knowledge base.
Another really enlightening conversation I recall having with my peers was about software requirement management. One of my classmates gave a presentation about how, in his prior job, a lack of requirement management skills had impacted a project, causing it to be cancelled and ultimately fail. We talked about the significance of requirement analysis and classification, possibly emphasising how crucial it is to establish the foundation of any successful project. After a quick investigation and debate on the Requirement Management phase, we attended online webinars to increase our knowledge and asked for assistance in comprehending the documentation of actual software projects. 
Challenges Faced:
I had difficulties integrating difficult ideas, encouraging peer collaboration, learning how to use project management tools, converting theoretical frameworks into practical situations, creating clear documentation, and managing my time. These difficulties underscored the importance of time management and striking a balance between class assignments, peer discussions, and online learning materials.
Personal development activities:
In terms of my educational outlook and personal development, this course has significantly expanded my knowledge and abilities in the field of software project management. In addition to the course materials, I also took an Udemy course to prepare for the professional certifications I was studying for, including the Certified Associate in Project Management (CAPM) from the Project Management Institute. My understanding of the project domain will make me stand out thanks to this university course and certification, which will also give me the confidence I need to lead software projects successfully in the future.My skill in advanced project monitoring and approaches improved as a result of my practical experience with the aforementioned project tools. Most significantly, I was able to relate to them because I had a year of prior work experience working as a fresher on a few software projects. This course helped me correct all the required points in my head and helped me form myself in a positive way.  


